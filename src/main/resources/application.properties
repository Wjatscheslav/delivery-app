## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# spring.datasource.url=jdbc:postgresql://localhost:5432/delivery
spring.datasource.url=jdbc:postgresql://localhost:5432/test_db
spring.datasource.username=postgres
spring.datasource.password=postgres

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

# RabbitMQ
rabbitmq.host=localhost
rabbitmq.username=rabbitmq
rabbitmq.password=rabbitmq
# rabbitmq.exchange.name=weather
rabbitmq.exchange.name=queueOne
rabbitmq.exchange.type=fanout

# Redis
redis.host=localhost
redis.port=6379
redis.weather.key=weatherForecast

# Rest
rest.weather.uri=http://localhost:8081/weatherForecast

# Reporting
reporting.mail.to=to@gmail.com
reporting.mail.from=from@gmail.com
reporting.mail.subject=Weather Forecast
reporting.mail.text=Please, see weather forecast in attachment
reporting.mail.tmp.file.path=temp.csv
reporting.smtp.host=localhost
reporting.smtp.port=25
reporting.smtp.auth.required=true
reporting.smtp.tls.enabled=true
reporting.smtp.username=test
reporting.smtp.password=test

# Elasticsearch
elasticsearch.host=localhost
elasticsearch.port=9300
elasticsearch.cluster.name=docker-cluster
# elasticsearch.weather.index=weather
elasticsearch.weather.index=forecast

# FTP
ftp.host=localhost
ftp.port=25
ftp.login=ftpuser
ftp.password=ftppass
ftp.file.path=/weather/forecast.json